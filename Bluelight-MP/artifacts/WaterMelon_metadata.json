{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "erc20Token",
						"type": "address"
					},
					{
						"internalType": "address payable",
						"name": "platformFeeAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "feePercent",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "auctionTokenTimeOver",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "bidTokenNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "buyCurFixNFT",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "buyTokenFixNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "cancel",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getERC20Token",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getMarketObj",
				"outputs": [
					{
						"internalType": "enum WaterMelon.OrderStatus",
						"name": "orderStatus",
						"type": "uint8"
					},
					{
						"internalType": "enum WaterMelon.OrderType",
						"name": "orderType",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxPrice",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "nftAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenID",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "currentOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "marketCreationTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentHighestBid",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "currentHighestBidder",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "auctionEndTime",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxPrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "auctionEndTime",
						"type": "uint256"
					}
				],
				"name": "listNFTForAuctionType",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "listNFTForFixedType",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "erc20Token",
						"type": "address"
					}
				],
				"name": "setERC20Token",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "setFeePercent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_addr",
						"type": "address"
					}
				],
				"name": "setPlatformAddr",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userDashboard",
						"type": "address"
					}
				],
				"name": "setUserDashboard",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "we can bid only through tokens, can't do with currency*********************************** balance mapping name correct.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Bluelight-MP/WaterMelon.sol": "WaterMelon"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Bluelight-MP/Address.sol": {
			"keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
			"license": "MIT",
			"urls": [
				"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
				"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
			]
		},
		"Bluelight-MP/CLG.sol": {
			"keccak256": "0x367515bd091c14be3a0926c327a07b90bac046f072f89d675baf0cf2bbb24478",
			"license": "MIT",
			"urls": [
				"bzz-raw://58c7d14c9522f00f579bf73d47b4f123e7e94184e3690a35e615cc967ccceb3c",
				"dweb:/ipfs/QmZHRPdwMY3fpZ6CVb2SjF257DkmFM8Cbu7AdVehESYi9a"
			]
		},
		"Bluelight-MP/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"Bluelight-MP/Helper.sol": {
			"keccak256": "0xfc6d34312809aa22bcdff4bac1fa36e8167af19dce2cb1c8ff87d70c1b9c8fae",
			"license": "MIT",
			"urls": [
				"bzz-raw://05e8be7bb78abeb9cbfdf59d0281c2eda4698001e470489ab676f6fd3ac7dbcb",
				"dweb:/ipfs/QmbwCV2khfW1CcwiMtxYBr933u1ZQMNiYJL66ow9UW7jdY"
			]
		},
		"Bluelight-MP/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"Bluelight-MP/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"Bluelight-MP/IERC721.sol": {
			"keccak256": "0x316cde3925ca6b32d057e076a7ee9bdc63d06db8e417d9b62fe503b46cdf7ff7",
			"license": "MIT",
			"urls": [
				"bzz-raw://a74d4e0a9392053139b826e56947c07236f8279f379f34db63bbaafc218d3ca3",
				"dweb:/ipfs/QmeDX416EYcp1aFSGXYq5cavEYAL1t4XCeLaeWjhshRgrK"
			]
		},
		"Bluelight-MP/IUserDashboard.sol": {
			"keccak256": "0x4f7997f13fe1fd9e1b21f05fb87340dd3df299555b19a0902f857a21e44a3fee",
			"license": "MIT",
			"urls": [
				"bzz-raw://8a7265453bf0568fe119b4855eeee7e2ecf0cca30cfff3e3c5fc92fe4559fb00",
				"dweb:/ipfs/QmXHhwLrv28pHXFrLxZrPgudLnVPSvXRg2c5jX74ZF67de"
			]
		},
		"Bluelight-MP/IWaterMelon.sol": {
			"keccak256": "0xb64b88d56add83a9fba1c11786e59477e94fc5b0a5ed1c3093673f1c3eecfaa4",
			"license": "MIT",
			"urls": [
				"bzz-raw://cb6beaef0d7a22971ba898e988151ce0c753d8254b3dfaa0a2ef66fef831706a",
				"dweb:/ipfs/QmWgqekwbxc1Lg6JDptvGL79KUCqeucXRar5YYBj4LC9y3"
			]
		},
		"Bluelight-MP/Ownable.sol": {
			"keccak256": "0x8c163fb0fb6e09d4ece34ede2d749086faeaa8438c07cf5529e5fbca680043e2",
			"license": "MIT",
			"urls": [
				"bzz-raw://d05812675ef3a9309494aef7f28683a347e4616169c70d917bf971e83564c01a",
				"dweb:/ipfs/QmbLBHFBScsLRin7TCUQRpy7dBA7wYnyZPeoCxemF1DjYo"
			]
		},
		"Bluelight-MP/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"Bluelight-MP/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		},
		"Bluelight-MP/WaterMelon.sol": {
			"keccak256": "0xd2859c5aa9cae1bd0af4045c1aee6131eae53fbabf3831f430dc8ea1f387666f",
			"license": "MIT",
			"urls": [
				"bzz-raw://a54a8f9c7e1f458b16b562b98303df25d9fbbae0d6c45cc5ed06d90156ce192b",
				"dweb:/ipfs/QmU8qoYTCqvgdkmcvAokMomwG5QKSYsoJLQroQrhReMSvg"
			]
		}
	},
	"version": 1
}