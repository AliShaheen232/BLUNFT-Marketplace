{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_marketplace",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timeStamp",
						"type": "uint256"
					}
				],
				"name": "LoggingIn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timeStamp",
						"type": "uint256"
					}
				],
				"name": "LoggingOut",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "username",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timeStamp",
						"type": "uint256"
					}
				],
				"name": "SignUp",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "addressToAmountRecord",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "curAmountSpent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenAmountSpent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "curAmountEarned",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenAmountEarned",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_userAddr",
						"type": "address"
					}
				],
				"name": "checkLogIn",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkUser",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deleteUser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum UserDashboard.NftCategory",
						"name": "nftCat",
						"type": "uint8"
					}
				],
				"name": "getAllNftCatWise",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "getNft",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "uniKey",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "iPFS",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNftCategories",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_uniKey",
						"type": "bytes32"
					}
				],
				"name": "getNftWithBytes32",
				"outputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "iPFS",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getProfilePic",
				"outputs": [
					{
						"internalType": "string",
						"name": "ipfs",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "ownerOfNfts",
						"type": "address"
					}
				],
				"name": "getUniKeysMapping",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum UserDashboard.NftCategory",
						"name": "nftCat",
						"type": "uint8"
					}
				],
				"name": "getUserNftCatWise",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "logIn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "logOut",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "myNFTs",
				"outputs": [
					{
						"internalType": "string",
						"name": "nftName",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "ipfs",
						"type": "string"
					},
					{
						"internalType": "enum UserDashboard.NftCategory",
						"name": "nftCategory",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum UserDashboard.NftCategory",
						"name": "",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nftCatWise",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "curAmountSpent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenAmountSpent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "curAmountEarned",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenAmountEarned",
						"type": "uint256"
					}
				],
				"name": "setAmountRecord",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "uniKey",
						"type": "bytes32"
					}
				],
				"name": "setBuyNftData",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "iPFS",
						"type": "string"
					}
				],
				"name": "setNft",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "nftContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "enum UserDashboard.NftCategory",
						"name": "nftCat",
						"type": "uint8"
					}
				],
				"name": "setNftCat",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "iPFS",
						"type": "string"
					}
				],
				"name": "setProfilePic",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_userName",
						"type": "string"
					}
				],
				"name": "signUp",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "uniKeysMapping",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_userName",
						"type": "string"
					}
				],
				"name": "updateUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "userAmountDetail",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "currencyEarned",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "earnedToken",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currencySpent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokenSpent",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "userNameToAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "enum UserDashboard.NftCategory",
						"name": "",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userNftCatWise",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Bluelight-MP/UserDashboard.sol": "UserDashboard"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Bluelight-MP/Helper.sol": {
			"keccak256": "0xfc6d34312809aa22bcdff4bac1fa36e8167af19dce2cb1c8ff87d70c1b9c8fae",
			"license": "MIT",
			"urls": [
				"bzz-raw://05e8be7bb78abeb9cbfdf59d0281c2eda4698001e470489ab676f6fd3ac7dbcb",
				"dweb:/ipfs/QmbwCV2khfW1CcwiMtxYBr933u1ZQMNiYJL66ow9UW7jdY"
			]
		},
		"Bluelight-MP/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"Bluelight-MP/IERC721.sol": {
			"keccak256": "0x316cde3925ca6b32d057e076a7ee9bdc63d06db8e417d9b62fe503b46cdf7ff7",
			"license": "MIT",
			"urls": [
				"bzz-raw://a74d4e0a9392053139b826e56947c07236f8279f379f34db63bbaafc218d3ca3",
				"dweb:/ipfs/QmeDX416EYcp1aFSGXYq5cavEYAL1t4XCeLaeWjhshRgrK"
			]
		},
		"Bluelight-MP/IUserDashboard.sol": {
			"keccak256": "0x4f7997f13fe1fd9e1b21f05fb87340dd3df299555b19a0902f857a21e44a3fee",
			"license": "MIT",
			"urls": [
				"bzz-raw://8a7265453bf0568fe119b4855eeee7e2ecf0cca30cfff3e3c5fc92fe4559fb00",
				"dweb:/ipfs/QmXHhwLrv28pHXFrLxZrPgudLnVPSvXRg2c5jX74ZF67de"
			]
		},
		"Bluelight-MP/IWaterMelon.sol": {
			"keccak256": "0xb64b88d56add83a9fba1c11786e59477e94fc5b0a5ed1c3093673f1c3eecfaa4",
			"license": "MIT",
			"urls": [
				"bzz-raw://cb6beaef0d7a22971ba898e988151ce0c753d8254b3dfaa0a2ef66fef831706a",
				"dweb:/ipfs/QmWgqekwbxc1Lg6JDptvGL79KUCqeucXRar5YYBj4LC9y3"
			]
		},
		"Bluelight-MP/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		},
		"Bluelight-MP/UserDashboard.sol": {
			"keccak256": "0x707888a8739b58be2f2cd442cb040b09ddfb1b450d364c7392174cdc36a87a2e",
			"license": "MIT",
			"urls": [
				"bzz-raw://731736fc566e01de647ab6a59e5c3d85e2a81abe9dfd2fc266230eee7add3190",
				"dweb:/ipfs/QmXb5onmJwLkzaM2rhVgvZnXdEcmZkuwLaBacFhFDWGsBk"
			]
		}
	},
	"version": 1
}